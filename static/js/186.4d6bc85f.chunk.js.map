{"version":3,"file":"static/js/186.4d6bc85f.chunk.js","mappings":"uMAEAA,EAAAA,EAAMC,SAASC,QAAU,+BACzB,MAAMC,EAAU,mCAEHC,EAAsBC,UACjC,IAME,aALuBL,EAAAA,EAAMM,IAAI,sBAAuB,CACtDC,OAAQ,CACNC,QAASL,MAGGM,KAAKC,OACvB,CAAE,MAAOC,GACP,MAAMA,CACR,GAGWC,EAAeP,UAC1B,IAOE,aANuBL,EAAAA,EAAMM,IAAI,gBAAiB,CAChDC,OAAQ,CACNC,QAASL,EACTU,MAAOA,MAGKJ,KAAKC,OACvB,CAAE,MAAOC,GACP,MAAMA,CACR,GAGWG,EAAoBT,UAC/B,IAME,aALuBL,EAAAA,EAAMM,IAAI,UAADS,OAAWC,GAAW,CACpDT,OAAQ,CACNC,QAASL,MAGGM,IAClB,CAAE,MAAOE,GACP,MAAMA,CACR,GAGWM,EAAoBZ,UAC/B,IAME,aALuBL,EAAAA,EAAMM,IAAI,UAADS,OAAWC,EAAO,YAAY,CAC5DT,OAAQ,CACNC,QAASL,MAGGM,KAAKC,OACvB,CAAE,MAAOC,GACP,MAAMA,CACR,GAGWO,EAAoBb,UAC/B,IAME,aALuBL,EAAAA,EAAMM,IAAI,UAADS,OAAWC,EAAO,YAAY,CAC5DT,OAAQ,CACNC,QAASL,MAGGM,KAAKU,IACvB,CAAE,MAAOR,GACP,MAAMA,CACR,E,wGC9DF,MAiDA,EAjDgBS,KACd,MAAM,QAAEJ,IAAYK,EAAAA,EAAAA,OACbC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCb,EAAOgB,IAAYH,EAAAA,EAAAA,UAAS,MAmBnC,OAjBAI,EAAAA,EAAAA,YAAU,KACUvB,WAChBqB,GAAa,GACb,IACE,MAAMG,QAAqBZ,EAAAA,EAAAA,IAAkBD,GAC7CO,EAAWM,EACb,CAAE,MAAOlB,GACPmB,QAAQnB,MAAM,+BAAgCA,GAC9CgB,EAAS,qDACX,CAAC,QACCD,GAAa,EACf,GAGFK,EAAW,GACV,CAACf,KAGFgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGT,IACCU,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CACZC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,IAGZ9B,IAASwB,EAAAA,EAAAA,KAACO,EAAAA,QAAQ,KACjBjB,IAAcd,IACdwB,EAAAA,EAAAA,KAAA,MAAAD,SACGZ,EAAQqB,KAAKC,IACZZ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKU,EAAOC,UACZV,EAAAA,EAAAA,KAAA,KAAAD,SAAIU,EAAOE,YAFJF,EAAOG,UAOrB,C,kECjDP,MA+BA,EA/BiBL,KAEbP,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OACEa,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRC,gBAAiB,WACjBnB,UAEFC,EAAAA,EAAAA,KAAA,MACEa,MAAO,CACLM,SAAU,OACVC,MAAO,OACPC,UAAW,SACXC,QAAS,OACTC,OAAQ,iBACRC,aAAc,MACdN,gBAAiB,OACjBO,UAAW,+BACX1B,SACH,sB","sources":["api.js","components/Reviews/Reviews.jsx","pages/NotFound/NotFound.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8e21f34d58b1a578e492fe7e575bb39e';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"api\";\nimport { RotatingLines } from \"react-loader-spinner\";\nimport NotFound from \"pages/NotFound/NotFound\";\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movieReviews = await fetchMovieReviews(movieId);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.error(\"Error fetching movie reviews\", error);\n        setError(\"Something went wrong while fetching movie reviews.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n      {error && <NotFound />}\n      {!isLoading && !error && (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n          backgroundColor: \"#f0f0f0\",\n        }}\n      >\n        <h1\n          style={{\n            fontSize: \"36px\",\n            color: \"#333\",\n            textAlign: \"center\",\n            padding: \"20px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            backgroundColor: \"#fff\",\n            boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n          }}\n        >\n          Page Not Found\n        </h1>\n      </div>\n    </>\n  );\n};\n\nexport default NotFound;\n"],"names":["axios","defaults","baseURL","API_KEY","fetchTrendingMovies","async","get","params","api_key","data","results","error","searchMovies","query","fetchMovieDetails","concat","movieId","fetchMovieReviews","fetchMovieCredits","cast","Reviews","useParams","reviews","setReviews","useState","isLoading","setIsLoading","setError","useEffect","movieReviews","console","fetchData","_jsxs","_Fragment","children","_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","NotFound","map","review","author","content","id","style","display","justifyContent","alignItems","height","backgroundColor","fontSize","color","textAlign","padding","border","borderRadius","boxShadow"],"sourceRoot":""}