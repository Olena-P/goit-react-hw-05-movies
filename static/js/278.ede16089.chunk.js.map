{"version":3,"file":"static/js/278.ede16089.chunk.js","mappings":"mMAEAA,EAAAA,EAAMC,SAASC,QAAU,+BACzB,MAAMC,EAAU,mCAEHC,EAAsBC,UACjC,IAME,aALuBL,EAAAA,EAAMM,IAAI,sBAAuB,CACtDC,OAAQ,CACNC,QAASL,MAGGM,KAAKC,OACvB,CAAE,MAAOC,GACP,MAAMA,CACR,GAGWC,EAAeP,UAC1B,IAOE,aANuBL,EAAAA,EAAMM,IAAI,gBAAiB,CAChDC,OAAQ,CACNC,QAASL,EACTU,MAAOA,MAGKJ,KAAKC,OACvB,CAAE,MAAOC,GACP,MAAMA,CACR,GAGWG,EAAoBT,UAC/B,IAME,aALuBL,EAAAA,EAAMM,IAAI,UAADS,OAAWC,GAAW,CACpDT,OAAQ,CACNC,QAASL,MAGGM,IAClB,CAAE,MAAOE,GACP,MAAMA,CACR,GAGWM,EAAoBZ,UAC/B,IAME,aALuBL,EAAAA,EAAMM,IAAI,UAADS,OAAWC,EAAO,YAAY,CAC5DT,OAAQ,CACNC,QAASL,MAGGM,KAAKC,OACvB,CAAE,MAAOC,GACP,MAAMA,CACR,GAGWO,EAAoBb,UAC/B,IAME,aALuBL,EAAAA,EAAMM,IAAI,UAADS,OAAWC,EAAO,YAAY,CAC5DT,OAAQ,CACNC,QAASL,MAGGM,KAAKU,IACvB,CAAE,MAAOR,GACP,MAAMA,CACR,E,qFChEF,MA+EA,EA/EeS,KACb,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,OACjCC,EAAaC,IAAkBC,EAAAA,EAAAA,UACpCL,EAAaf,IAAI,UAAY,KAExBqB,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAEnDG,EAAAA,EAAAA,YAAU,KACcxB,WACpB,IACE,MAAMK,QAAgBE,EAAAA,EAAAA,IAAaY,GACnCI,EAAiBlB,EACnB,CAAE,MAAOC,GACPmB,QAAQnB,MAAM,iCAAkCA,EAClD,GAGFoB,EAAe,GACd,CAACP,IAWJ,OACEQ,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,SAAU,QAASC,OAAQ,SAAUC,QAAS,QAASC,SAAA,EACnEL,EAAAA,EAAAA,MAAA,QAAMM,SAPkBC,IAC1BA,EAAEC,iBACFlB,EAAgB,CAAET,MAAOW,GAAc,EAKFa,SAAA,EACjCI,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOnB,EACPoB,SAfyBL,IAC/Bd,EAAec,EAAEM,OAAOF,MAAM,EAexBV,MAAO,CACLG,QAAS,MACTU,YAAa,MACbC,SAAU,OACVC,MAAO,wBAGXP,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLT,MAAO,CACLG,QAAS,MACTW,SAAU,OACVE,gBAAiB,OACjBC,MAAO,QACPC,OAAQ,OACRC,OAAQ,WACRf,SACH,eAKHI,EAAAA,EAAAA,KAAA,MAAIR,MAAO,CAAEoB,UAAW,OAAQjB,QAAS,KAAMC,SAC5CV,EAAc2B,KAAKC,IAClBd,EAAAA,EAAAA,KAAA,MAAmBR,MAAO,CAAEuB,aAAc,QAASnB,UACjDI,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CACHC,GAAE,WAAA3C,OAAawC,EAAMI,IACrB1B,MAAO,CACL2B,eAAgB,OAChBV,MAAO,OACPH,SAAU,OACVc,WAAY,QACZxB,SAEDkB,EAAMO,SAVFP,EAAMI,UAef,C","sources":["api.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8e21f34d58b1a578e492fe7e575bb39e';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { searchMovies } from \"api\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get(\"query\") || \"\"\n  );\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    const performSearch = async () => {\n      try {\n        const results = await searchMovies(searchQuery);\n        setSearchResults(results);\n      } catch (error) {\n        console.error(\"Error fetching search results:\", error);\n      }\n    };\n\n    performSearch();\n  }, [searchQuery]);\n\n  const handleSearchInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <div style={{ maxWidth: \"800px\", margin: \"0 auto\", padding: \"20px\" }}>\n      <form onSubmit={handleSearchSubmit}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleSearchInputChange}\n          style={{\n            padding: \"8px\",\n            marginRight: \"8px\",\n            fontSize: \"16px\",\n            width: \"calc(100% - 80px)\",\n          }}\n        />\n        <button\n          type=\"submit\"\n          style={{\n            padding: \"8px\",\n            fontSize: \"16px\",\n            backgroundColor: \"#333\",\n            color: \"white\",\n            border: \"none\",\n            cursor: \"pointer\",\n          }}\n        >\n          Search\n        </button>\n      </form>\n\n      <ul style={{ listStyle: \"none\", padding: \"0\" }}>\n        {searchResults.map((movie) => (\n          <li key={movie.id} style={{ marginBottom: \"10px\" }}>\n            <Link\n              to={`/movies/${movie.id}`}\n              style={{\n                textDecoration: \"none\",\n                color: \"#333\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","defaults","baseURL","API_KEY","fetchTrendingMovies","async","get","params","api_key","data","results","error","searchMovies","query","fetchMovieDetails","concat","movieId","fetchMovieReviews","fetchMovieCredits","cast","Movies","searchParams","setSearchParams","useSearchParams","searchQuery","setSearchQuery","useState","searchResults","setSearchResults","useEffect","console","performSearch","_jsxs","style","maxWidth","margin","padding","children","onSubmit","e","preventDefault","_jsx","type","value","onChange","target","marginRight","fontSize","width","backgroundColor","color","border","cursor","listStyle","map","movie","marginBottom","Link","to","id","textDecoration","fontWeight","title"],"sourceRoot":""}